//题目，寻找左边第一个大于等于它的数
//https://oj.socoding.cn/contest/problem?id=642&pid=2
#include <bits/stdc++.h>
using namespace std;

signed main() {
	int n;
	cin >> n;
	vector<int> h(n+1);
	vector<int> c(n+1);
	for(int i=0;i<n;i++) cin >> h[i];
	
	stack<int> st;
	for(int i = 0;i < n;i++){
    	while(!st.empty() && h[i] > h[st.top()]){
        	st.pop();
    	}
    	if(!st.empty()){
        	c[i] = st.top();
    	}
    	else c[i] = -1;
    	st.push(i);
	}
	
	for(int i=0;i<n;i++) {
		if (c[i] == -1) cout << i << '\n';
		else cout << i-c[i]-1 << '\n';
	}
	return 0;
}

//模板分析
vector<int> h(n+1);//原数组
vector<int> c(n+1);//答案数组
stack<int> st;

for(int i = 0;i < n;i++){
  //如果 目前的数 大于 栈顶的数 则踢走栈顶的数
    while(!st.empty() && h[i] > h[st.top()]){
      	st.pop();
  	}
    if(!st.empty()){
      //此处记录的是元素下标
      	c[i] = st.top();
  	}
   	else c[i] = -1;
   	st.push(i);
}

//如果求右边的数
for(int i = nums.size()-1; i >= 0; i--){
    while(!st.empty() && nums[i] >= st.top()){
        st.pop();
    }
    if(!st.empty()){
        res[i] = st.top();
    }
    else res[i] = -1;
  //如果需要 数组元素 并非下标
    st.push(nums[i]);
}
